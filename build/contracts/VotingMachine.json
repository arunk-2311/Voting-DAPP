{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_candidate",
          "type": "string"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "candidateToVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_candidate",
          "type": "string"
        }
      ],
      "name": "voteCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/arun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
    "1": "/home/arun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "2": "contracts/voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/voting.sol",
    "exportedSymbols": {
      "Context": [
        205
      ],
      "Ownable": [
        183
      ],
      "VotingMachine": [
        78
      ]
    },
    "id": 79,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:2"
      },
      {
        "absolutePath": "/home/arun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 79,
        "sourceUnit": 184,
        "src": "56:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 183,
              "src": "136:7:2"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "136:7:2"
          }
        ],
        "canonicalName": "VotingMachine",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 78,
        "linearizedBaseContracts": [
          78,
          183,
          205
        ],
        "name": "VotingMachine",
        "nameLocation": "119:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "26640ae6",
            "id": 8,
            "mutability": "mutable",
            "name": "candidateToVotes",
            "nameLocation": "184:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 78,
            "src": "150:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "158:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "150:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 6,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "168:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "238:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 78,
            "src": "206:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "214:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "206:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 10,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "224:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "hasVoted",
            "nameLocation": "287:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 78,
            "src": "254:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "262:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "254:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 14,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "273:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "367:46:2",
              "statements": [
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "377:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 25,
                      "indexExpression": {
                        "id": 24,
                        "name": "_candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "388:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "377:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "402:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "377:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "377:29:2"
                }
              ]
            },
            "functionSelector": "462e91ec",
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 125,
                  "src": "357:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "357:9:2"
              }
            ],
            "name": "addCandidate",
            "nameLocation": "311:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_candidate",
                  "nameLocation": "338:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "324:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "323:26:2"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:0:2"
            },
            "scope": 78,
            "src": "302:111:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "452:97:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 35,
                            "name": "hasVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "470:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 37,
                          "indexExpression": {
                            "id": 36,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "479:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "470:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "490:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "470:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420766f7465206d6f7265207468616e206f6e63652121",
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "497:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f21b0dc70d0c9011390b2a6c645435c97d3916240a8b10f6a04cdb4a5bfb7f5",
                          "typeString": "literal_string \"You can't vote more than once!!\""
                        },
                        "value": "You can't vote more than once!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f21b0dc70d0c9011390b2a6c645435c97d3916240a8b10f6a04cdb4a5bfb7f5",
                          "typeString": "literal_string \"You can't vote more than once!!\""
                        }
                      ],
                      "id": 34,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "462:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "462:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "462:69:2"
                },
                {
                  "id": 43,
                  "nodeType": "PlaceholderStatement",
                  "src": "541:1:2"
                }
              ]
            },
            "id": 45,
            "name": "canVote",
            "nameLocation": "428:7:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "444:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "436:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:16:2"
            },
            "src": "419:130:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "651:173:2",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 54,
                      "name": "candidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "665:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 56,
                    "indexExpression": {
                      "id": 55,
                      "name": "_candidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "676:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "665:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "nodeType": "IfStatement",
                  "src": "661:157:2",
                  "trueBody": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "689:129:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 57,
                              "name": "candidateToVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "703:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 59,
                            "indexExpression": {
                              "id": 58,
                              "name": "_candidate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "720:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "703:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 60,
                                "name": "candidateToVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "734:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                  "typeString": "mapping(string memory => uint256)"
                                }
                              },
                              "id": 62,
                              "indexExpression": {
                                "id": 61,
                                "name": "_candidate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "751:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "734:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "765:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "734:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "703:63:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 66,
                        "nodeType": "ExpressionStatement",
                        "src": "703:63:2"
                      },
                      {
                        "expression": {
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 67,
                              "name": "hasVoted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "780:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 70,
                            "indexExpression": {
                              "expression": {
                                "id": 68,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "789:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "789:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "780:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "803:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "780:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
                        "src": "780:27:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "6108a0dc",
            "id": 77,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 50,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "635:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "635:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 52,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49,
                  "name": "canVote",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45,
                  "src": "627:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "627:19:2"
              }
            ],
            "name": "voteCandidate",
            "nameLocation": "564:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "_candidate",
                  "nameLocation": "592:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "578:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "577:26:2"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:2"
            },
            "scope": 78,
            "src": "555:269:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 79,
        "src": "110:716:2",
        "usedErrors": []
      }
    ],
    "src": "31:796:2"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105458061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806326640ae614610067578063462e91ec146100a55780636108a0dc146100ba578063715018a6146100cd5780638da5cb5b146100d5578063f2fde38b146100f0575b600080fd5b610092610075366004610398565b805160208183018101805160018252928201919093012091525481565b6040519081526020015b60405180910390f35b6100b86100b3366004610398565b610103565b005b6100b86100c8366004610398565b61016b565b6100b8610261565b6000546040516001600160a01b03909116815260200161009c565b6100b86100fe366004610449565b610297565b6000546001600160a01b031633146101365760405162461bcd60e51b815260040161012d90610479565b60405180910390fd5b600160028260405161014891906104ae565b908152604051908190036020019020805491151560ff1990921691909117905550565b3360008181526003602052604090205460ff16156101cb5760405162461bcd60e51b815260206004820152601f60248201527f596f752063616e277420766f7465206d6f7265207468616e206f6e6365212100604482015260640161012d565b6002826040516101db91906104ae565b9081526040519081900360200190205460ff161561025d5760018260405161020391906104ae565b908152602001604051809103902054600161021e91906104e9565b60018360405161022e91906104ae565b9081526040805191829003602090810190922092909255336000908152600390915220805460ff191660011790555b5050565b6000546001600160a01b0316331461028b5760405162461bcd60e51b815260040161012d90610479565b6102956000610332565b565b6000546001600160a01b031633146102c15760405162461bcd60e51b815260040161012d90610479565b6001600160a01b0381166103265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012d565b61032f81610332565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103aa57600080fd5b813567ffffffffffffffff808211156103c257600080fd5b818401915084601f8301126103d657600080fd5b8135818111156103e8576103e8610382565b604051601f8201601f19908116603f0116810190838211818310171561041057610410610382565b8160405282815287602084870101111561042957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561045b57600080fd5b81356001600160a01b038116811461047257600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000825160005b818110156104cf57602081860181015185830152016104b5565b818111156104de576000828501525b509190910192915050565b6000821982111561050a57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220eb2fd153ba2649b4af7838ae228d525020ccd4889a70defa9b156678e79f7e8164736f6c634300080b0033",
  "bytecodeSha1": "8bc361ffacbea92a5dd7d23d853ff50cd8e043a9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "VotingMachine",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "11": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "VotingMachine.voteCandidate": {
          "10": [
            665,
            687,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "8": [
            2378,
            2395
          ],
          "9": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "6": [
            1998,
            2071
          ],
          "7": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "2": {
        "VotingMachine.addCandidate": {
          "2": [
            377,
            406
          ]
        },
        "VotingMachine.voteCandidate": {
          "3": [
            703,
            766
          ],
          "4": [
            780,
            807
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c806326640ae614610067578063462e91ec146100a55780636108a0dc146100ba578063715018a6146100cd5780638da5cb5b146100d5578063f2fde38b146100f0575b600080fd5b610092610075366004610398565b805160208183018101805160018252928201919093012091525481565b6040519081526020015b60405180910390f35b6100b86100b3366004610398565b610103565b005b6100b86100c8366004610398565b61016b565b6100b8610261565b6000546040516001600160a01b03909116815260200161009c565b6100b86100fe366004610449565b610297565b6000546001600160a01b031633146101365760405162461bcd60e51b815260040161012d90610479565b60405180910390fd5b600160028260405161014891906104ae565b908152604051908190036020019020805491151560ff1990921691909117905550565b3360008181526003602052604090205460ff16156101cb5760405162461bcd60e51b815260206004820152601f60248201527f596f752063616e277420766f7465206d6f7265207468616e206f6e6365212100604482015260640161012d565b6002826040516101db91906104ae565b9081526040519081900360200190205460ff161561025d5760018260405161020391906104ae565b908152602001604051809103902054600161021e91906104e9565b60018360405161022e91906104ae565b9081526040805191829003602090810190922092909255336000908152600390915220805460ff191660011790555b5050565b6000546001600160a01b0316331461028b5760405162461bcd60e51b815260040161012d90610479565b6102956000610332565b565b6000546001600160a01b031633146102c15760405162461bcd60e51b815260040161012d90610479565b6001600160a01b0381166103265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012d565b61032f81610332565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103aa57600080fd5b813567ffffffffffffffff808211156103c257600080fd5b818401915084601f8301126103d657600080fd5b8135818111156103e8576103e8610382565b604051601f8201601f19908116603f0116810190838211818310171561041057610410610382565b8160405282815287602084870101111561042957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561045b57600080fd5b81356001600160a01b038116811461047257600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000825160005b818110156104cf57602081860181015185830152016104b5565b818111156104de576000828501525b509190910192915050565b6000821982111561050a57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220eb2fd153ba2649b4af7838ae228d525020ccd4889a70defa9b156678e79f7e8164736f6c634300080b0033",
  "deployedSourceMap": "110:716:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;150:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:25:3;;;1207:2;1192:18;150:50:2;;;;;;;;302:111;;;;;;:::i;:::-;;:::i;:::-;;555:269;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;1401:51:3;;1389:2;1374:18;1036:85:0;1255:203:3;1918:198:0;;;;;;:::i;:::-;;:::i;302:111:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;402:4:2::1;377:10;388;377:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:29;;;::::1;;-1:-1:-1::0;;377:29:2;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;302:111:2:o;555:269::-;635:10;470:16;;;;:8;:16;;;;;;;;:25;462:69;;;;-1:-1:-1;;;462:69:2;;2750:2:3;462:69:2;;;2732:21:3;2789:2;2769:18;;;2762:30;2828:33;2808:18;;;2801:61;2879:18;;462:69:2;2548:355:3;462:69:2;665:10:::1;676;665:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;661:157;;;734:16;751:10;734:28;;;;;;:::i;:::-;;;;;;;;;;;;;;765:1;734:32;;;;:::i;:::-;703:16;720:10;703:28;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;:63;;;;789:10:::1;780:20;::::0;;;:8:::1;:20:::0;;;;:27;;-1:-1:-1;;780:27:2::1;803:4;780:27;::::0;;661:157:::1;555:269:::0;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3340:2:3;1998:73:0::1;::::0;::::1;3322:21:3::0;3379:2;3359:18;;;3352:30;3418:34;3398:18;;;3391:62;-1:-1:-1;;;3469:18:3;;;3462:36;3515:19;;1998:73:0::1;3138:402:3::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:127:3:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:922;215:6;268:2;256:9;247:7;243:23;239:32;236:52;;;284:1;281;274:12;236:52;324:9;311:23;353:18;394:2;386:6;383:14;380:34;;;410:1;407;400:12;380:34;448:6;437:9;433:22;423:32;;493:7;486:4;482:2;478:13;474:27;464:55;;515:1;512;505:12;464:55;551:2;538:16;573:2;569;566:10;563:36;;;579:18;;:::i;:::-;654:2;648:9;622:2;708:13;;-1:-1:-1;;704:22:3;;;728:2;700:31;696:40;684:53;;;752:18;;;772:22;;;749:46;746:72;;;798:18;;:::i;:::-;838:10;834:2;827:22;873:2;865:6;858:18;913:7;908:2;903;899;895:11;891:20;888:33;885:53;;;934:1;931;924:12;885:53;990:2;985;981;977:11;972:2;964:6;960:15;947:46;1035:1;1013:15;;;1030:2;1009:24;1002:35;;;;-1:-1:-1;1017:6:3;146:922;-1:-1:-1;;;;;146:922:3:o;1463:286::-;1522:6;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1617:23;;-1:-1:-1;;;;;1669:31:3;;1659:42;;1649:70;;1715:1;1712;1705:12;1649:70;1738:5;1463:286;-1:-1:-1;;;1463:286:3:o;1754:356::-;1956:2;1938:21;;;1975:18;;;1968:30;2034:34;2029:2;2014:18;;2007:62;2101:2;2086:18;;1754:356::o;2115:428::-;2246:3;2284:6;2278:13;2309:1;2319:129;2333:6;2330:1;2327:13;2319:129;;;2431:4;2415:14;;;2411:25;;2405:32;2392:11;;;2385:53;2348:12;2319:129;;;2466:6;2463:1;2460:13;2457:48;;;2501:1;2492:6;2487:3;2483:16;2476:27;2457:48;-1:-1:-1;2521:16:3;;;;;2115:428;-1:-1:-1;;2115:428:3:o;2908:225::-;2948:3;2979:1;2975:6;2972:1;2969:13;2966:136;;;3024:10;3019:3;3015:20;3012:1;3005:31;3059:4;3056:1;3049:15;3087:4;3084:1;3077:15;2966:136;-1:-1:-1;3118:9:3;;2908:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    110,
    826
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26640AE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x462E91EC EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x6108A0DC EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x398 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x16B JUMP JUMPDEST PUSH2 0xB8 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0xB8 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x449 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420766F7465206D6F7265207468616E206F6E6365212100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12D JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x25D JUMPI PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x295 PUSH1 0x0 PUSH2 0x332 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x32F DUP2 PUSH2 0x332 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E8 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x382 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4CF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x4B5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x50A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x2F 0xD1 MSTORE8 0xBA 0x26 0x49 0xB4 0xAF PUSH25 0x38AE228D525020CCD4889A70DEFA9B156678E79F7E8164736F PUSH13 0x634300080B0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        110,
        826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x26640AE6"
    },
    "38": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "EQ",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x462E91EC"
    },
    "49": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5"
    },
    "53": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6108A0DC"
    },
    "60": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA"
    },
    "64": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "71": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD"
    },
    "75": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "82": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5"
    },
    "86": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF0"
    },
    "97": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        110,
        826
      ],
      "op": "REVERT",
      "path": "2"
    },
    "103": {
      "offset": [
        150,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92"
    },
    "107": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75"
    },
    "110": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "113": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x398"
    },
    "116": {
      "fn": null,
      "jump": "i",
      "offset": [
        150,
        200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "117": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "118": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "120": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "122": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP4",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "ADD",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "ADD",
      "path": "2"
    },
    "127": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "128": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "129": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "131": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP3",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "133": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP3",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "ADD",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "138": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "139": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "ADD",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "142": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "144": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "149": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "150": {
      "op": "SWAP1"
    },
    "151": {
      "op": "DUP2"
    },
    "152": {
      "op": "MSTORE"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "155": {
      "op": "ADD"
    },
    "156": {
      "offset": [
        150,
        200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "159": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "160": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SUB",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        150,
        200
      ],
      "op": "RETURN",
      "path": "2"
    },
    "165": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "166": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB8"
    },
    "169": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3"
    },
    "172": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "173": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "175": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x398"
    },
    "178": {
      "fn": "VotingMachine.addCandidate",
      "jump": "i",
      "offset": [
        302,
        413
      ],
      "op": "JUMP",
      "path": "2"
    },
    "179": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "180": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103"
    },
    "183": {
      "fn": "VotingMachine.addCandidate",
      "jump": "i",
      "offset": [
        302,
        413
      ],
      "op": "JUMP",
      "path": "2"
    },
    "184": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "185": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "STOP",
      "path": "2"
    },
    "186": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "187": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB8"
    },
    "190": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8"
    },
    "193": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "194": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "196": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x398"
    },
    "199": {
      "fn": "VotingMachine.voteCandidate",
      "jump": "i",
      "offset": [
        555,
        824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "200": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "201": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B"
    },
    "204": {
      "fn": "VotingMachine.voteCandidate",
      "jump": "i",
      "offset": [
        555,
        824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "205": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261"
    },
    "212": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "213": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "216": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "217": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "219": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "226": {
      "op": "SHL"
    },
    "227": {
      "op": "SUB"
    },
    "228": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "229": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "231": {
      "op": "DUP2"
    },
    "232": {
      "op": "MSTORE"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C"
    },
    "239": {
      "op": "JUMP"
    },
    "240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x449"
    },
    "253": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x297"
    },
    "258": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        302,
        413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "260": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "262": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "269": {
      "op": "SHL"
    },
    "270": {
      "op": "SUB"
    },
    "271": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "272": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 1
    },
    "273": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "274": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "277": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "280": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "287": {
      "op": "SHL"
    },
    "288": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "290": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "292": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "300": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "301": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "304": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "305": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "309": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        402,
        406
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "313": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "315": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        388,
        398
      ],
      "op": "DUP3",
      "path": "2"
    },
    "316": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "318": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "319": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x148"
    },
    "322": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "323": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "324": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "327": {
      "fn": "VotingMachine.addCandidate",
      "jump": "i",
      "offset": [
        377,
        399
      ],
      "op": "JUMP",
      "path": "2"
    },
    "328": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "329": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "330": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "331": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "332": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "334": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "335": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "336": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "337": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "338": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "SUB",
      "path": "2"
    },
    "339": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "341": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "ADD",
      "path": "2"
    },
    "342": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "343": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        399
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "344": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "DUP1",
      "path": "2"
    },
    "345": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "346": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "347": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "348": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "349": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "351": {
      "op": "NOT"
    },
    "352": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "353": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "354": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "AND",
      "path": "2"
    },
    "355": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "356": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "357": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "358": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "OR",
      "path": "2"
    },
    "359": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "360": {
      "fn": "VotingMachine.addCandidate",
      "offset": [
        377,
        406
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "361": {
      "op": "POP"
    },
    "362": {
      "fn": "VotingMachine.addCandidate",
      "jump": "o",
      "offset": [
        302,
        413
      ],
      "op": "JUMP",
      "path": "2"
    },
    "363": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "364": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        635,
        645
      ],
      "op": "CALLER",
      "path": "2"
    },
    "365": {
      "offset": [
        470,
        486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "367": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "DUP2",
      "path": "2"
    },
    "368": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "DUP2",
      "path": "2"
    },
    "369": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "370": {
      "offset": [
        470,
        478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "372": {
      "offset": [
        470,
        486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "374": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "375": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "377": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "378": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "379": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "380": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "382": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        470,
        486
      ],
      "op": "AND",
      "path": "2"
    },
    "383": {
      "offset": [
        470,
        495
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "384": {
      "offset": [
        462,
        531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "387": {
      "offset": [
        462,
        531
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "388": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        462,
        531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "390": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        462,
        531
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "offset": [
        462,
        531
      ],
      "op": "DUP2",
      "path": "2"
    },
    "399": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        462,
        531
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "402": {
      "offset": [
        462,
        531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "404": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        462,
        531
      ],
      "op": "DUP3",
      "path": "2"
    },
    "405": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        462,
        531
      ],
      "op": "ADD",
      "path": "2"
    },
    "406": {
      "op": "MSTORE"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "411": {
      "op": "DUP3"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH32",
      "value": "0x596F752063616E277420766F7465206D6F7265207468616E206F6E6365212100"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "449": {
      "op": "DUP3"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "offset": [
        462,
        531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D"
    },
    "458": {
      "op": "JUMP"
    },
    "459": {
      "offset": [
        462,
        531
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "462": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        676,
        686
      ],
      "op": "DUP3",
      "path": "2"
    },
    "463": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "465": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "466": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB"
    },
    "469": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "470": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "471": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "474": {
      "fn": "VotingMachine.voteCandidate",
      "jump": "i",
      "offset": [
        665,
        687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "475": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "476": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "477": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "DUP2",
      "path": "2"
    },
    "478": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "479": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "481": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "482": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "483": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "DUP2",
      "path": "2"
    },
    "484": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "485": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SUB",
      "path": "2"
    },
    "486": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "488": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "ADD",
      "path": "2"
    },
    "489": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "490": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "491": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "492": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "494": {
      "branch": 10,
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        665,
        687
      ],
      "op": "AND",
      "path": "2"
    },
    "495": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        661,
        818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "496": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        661,
        818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25D"
    },
    "499": {
      "branch": 10,
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        661,
        818
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "500": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        750
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x1"
    },
    "502": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        751,
        761
      ],
      "op": "DUP3",
      "path": "2"
    },
    "503": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "505": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "506": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x203"
    },
    "509": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "510": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "511": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "514": {
      "fn": "VotingMachine.voteCandidate",
      "jump": "i",
      "offset": [
        734,
        762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "515": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "516": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "517": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "DUP2",
      "path": "2"
    },
    "518": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "519": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "521": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "ADD",
      "path": "2"
    },
    "522": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "524": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "525": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "DUP1",
      "path": "2"
    },
    "526": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "527": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "SUB",
      "path": "2"
    },
    "528": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "529": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "530": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        762
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "531": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        765,
        766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "533": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21E"
    },
    "536": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "537": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "538": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E9"
    },
    "541": {
      "fn": "VotingMachine.voteCandidate",
      "jump": "i",
      "offset": [
        734,
        766
      ],
      "op": "JUMP",
      "path": "2"
    },
    "542": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        734,
        766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "543": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "545": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        720,
        730
      ],
      "op": "DUP4",
      "path": "2"
    },
    "546": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "548": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "549": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E"
    },
    "552": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "553": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "554": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "557": {
      "fn": "VotingMachine.voteCandidate",
      "jump": "i",
      "offset": [
        703,
        731
      ],
      "op": "JUMP",
      "path": "2"
    },
    "558": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "559": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "560": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "DUP2",
      "path": "2"
    },
    "561": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "562": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "564": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "DUP1",
      "path": "2"
    },
    "565": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "566": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "567": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "DUP3",
      "path": "2"
    },
    "568": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "569": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SUB",
      "path": "2"
    },
    "570": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "572": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "573": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "DUP2",
      "path": "2"
    },
    "574": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "ADD",
      "path": "2"
    },
    "575": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "576": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "577": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        731
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "578": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        766
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "579": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "580": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        766
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "581": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        703,
        766
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "582": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        789,
        799
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 4
    },
    "583": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "585": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "586": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "587": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "588": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "590": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "591": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "592": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "593": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        800
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "594": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        807
      ],
      "op": "DUP1",
      "path": "2"
    },
    "595": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        807
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "596": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "598": {
      "op": "NOT"
    },
    "599": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        807
      ],
      "op": "AND",
      "path": "2"
    },
    "600": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        803,
        807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "602": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        807
      ],
      "op": "OR",
      "path": "2"
    },
    "603": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "604": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        780,
        807
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "605": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        661,
        818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "606": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "POP",
      "path": "2"
    },
    "607": {
      "fn": "VotingMachine.voteCandidate",
      "offset": [
        555,
        824
      ],
      "op": "POP",
      "path": "2"
    },
    "608": {
      "fn": "VotingMachine.voteCandidate",
      "jump": "o",
      "offset": [
        555,
        824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "610": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "612": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "SUB"
    },
    "621": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "622": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "623": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "624": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B"
    },
    "627": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "630": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "650": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x295"
    },
    "655": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "660": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "661": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "662": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "666": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "op": "SUB"
    },
    "675": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "676": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "677": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "678": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C1"
    },
    "681": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "682": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "691": {
      "op": "SHL"
    },
    "692": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "694": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "697": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "704": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "op": "SUB"
    },
    "714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 6
    },
    "715": {
      "branch": 11,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "716": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x326"
    },
    "719": {
      "branch": 11,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "723": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "734": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "736": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "743": {
      "op": "DUP3"
    },
    "744": {
      "op": "ADD"
    },
    "745": {
      "op": "MSTORE"
    },
    "746": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "781": {
      "op": "DUP3"
    },
    "782": {
      "op": "ADD"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "796": {
      "op": "DUP3"
    },
    "797": {
      "op": "ADD"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D"
    },
    "805": {
      "op": "JUMP"
    },
    "806": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "807": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x32F"
    },
    "810": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "811": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "814": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "815": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "816": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "817": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "818": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "819": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "821": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "822": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "SUB"
    },
    "831": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 8
    },
    "832": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "833": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "op": "SUB"
    },
    "842": {
      "op": "NOT"
    },
    "843": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "844": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "845": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "846": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "847": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "848": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "849": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x40"
    },
    "851": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "852": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "853": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "854": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "855": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "856": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "857": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "858": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "859": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "892": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "893": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "895": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "896": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "897": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "898": {
      "op": "JUMPDEST"
    },
    "899": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "906": {
      "op": "SHL"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "909": {
      "op": "MSTORE"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "914": {
      "op": "MSTORE"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "919": {
      "op": "REVERT"
    },
    "920": {
      "op": "JUMPDEST"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "DUP5"
    },
    "927": {
      "op": "SUB"
    },
    "928": {
      "op": "SLT"
    },
    "929": {
      "op": "ISZERO"
    },
    "930": {
      "op": "PUSH2",
      "value": "0x3AA"
    },
    "933": {
      "op": "JUMPI"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "936": {
      "op": "DUP1"
    },
    "937": {
      "op": "REVERT"
    },
    "938": {
      "op": "JUMPDEST"
    },
    "939": {
      "op": "DUP2"
    },
    "940": {
      "op": "CALLDATALOAD"
    },
    "941": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "950": {
      "op": "DUP1"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "GT"
    },
    "953": {
      "op": "ISZERO"
    },
    "954": {
      "op": "PUSH2",
      "value": "0x3C2"
    },
    "957": {
      "op": "JUMPI"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "960": {
      "op": "DUP1"
    },
    "961": {
      "op": "REVERT"
    },
    "962": {
      "op": "JUMPDEST"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "DUP5"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "SWAP2"
    },
    "967": {
      "op": "POP"
    },
    "968": {
      "op": "DUP5"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "971": {
      "op": "DUP4"
    },
    "972": {
      "op": "ADD"
    },
    "973": {
      "op": "SLT"
    },
    "974": {
      "op": "PUSH2",
      "value": "0x3D6"
    },
    "977": {
      "op": "JUMPI"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "980": {
      "op": "DUP1"
    },
    "981": {
      "op": "REVERT"
    },
    "982": {
      "op": "JUMPDEST"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "CALLDATALOAD"
    },
    "985": {
      "op": "DUP2"
    },
    "986": {
      "op": "DUP2"
    },
    "987": {
      "op": "GT"
    },
    "988": {
      "op": "ISZERO"
    },
    "989": {
      "op": "PUSH2",
      "value": "0x3E8"
    },
    "992": {
      "op": "JUMPI"
    },
    "993": {
      "op": "PUSH2",
      "value": "0x3E8"
    },
    "996": {
      "op": "PUSH2",
      "value": "0x382"
    },
    "999": {
      "jump": "i",
      "op": "JUMP"
    },
    "1000": {
      "op": "JUMPDEST"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1003": {
      "op": "MLOAD"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1010": {
      "op": "NOT"
    },
    "1011": {
      "op": "SWAP1"
    },
    "1012": {
      "op": "DUP2"
    },
    "1013": {
      "op": "AND"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "op": "AND"
    },
    "1018": {
      "op": "DUP2"
    },
    "1019": {
      "op": "ADD"
    },
    "1020": {
      "op": "SWAP1"
    },
    "1021": {
      "op": "DUP4"
    },
    "1022": {
      "op": "DUP3"
    },
    "1023": {
      "op": "GT"
    },
    "1024": {
      "op": "DUP2"
    },
    "1025": {
      "op": "DUP4"
    },
    "1026": {
      "op": "LT"
    },
    "1027": {
      "op": "OR"
    },
    "1028": {
      "op": "ISZERO"
    },
    "1029": {
      "op": "PUSH2",
      "value": "0x410"
    },
    "1032": {
      "op": "JUMPI"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x410"
    },
    "1036": {
      "op": "PUSH2",
      "value": "0x382"
    },
    "1039": {
      "jump": "i",
      "op": "JUMP"
    },
    "1040": {
      "op": "JUMPDEST"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "DUP8"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1051": {
      "op": "DUP5"
    },
    "1052": {
      "op": "DUP8"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "op": "GT"
    },
    "1056": {
      "op": "ISZERO"
    },
    "1057": {
      "op": "PUSH2",
      "value": "0x429"
    },
    "1060": {
      "op": "JUMPI"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1063": {
      "op": "DUP1"
    },
    "1064": {
      "op": "REVERT"
    },
    "1065": {
      "op": "JUMPDEST"
    },
    "1066": {
      "op": "DUP3"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1069": {
      "op": "DUP7"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1073": {
      "op": "DUP4"
    },
    "1074": {
      "op": "ADD"
    },
    "1075": {
      "op": "CALLDATACOPY"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1078": {
      "op": "SWAP3"
    },
    "1079": {
      "op": "DUP2"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1083": {
      "op": "ADD"
    },
    "1084": {
      "op": "SWAP3"
    },
    "1085": {
      "op": "SWAP1"
    },
    "1086": {
      "op": "SWAP3"
    },
    "1087": {
      "op": "MSTORE"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "SWAP6"
    },
    "1090": {
      "op": "SWAP5"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "op": "POP"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "jump": "o",
      "op": "JUMP"
    },
    "1097": {
      "op": "JUMPDEST"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "DUP5"
    },
    "1104": {
      "op": "SUB"
    },
    "1105": {
      "op": "SLT"
    },
    "1106": {
      "op": "ISZERO"
    },
    "1107": {
      "op": "PUSH2",
      "value": "0x45B"
    },
    "1110": {
      "op": "JUMPI"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1113": {
      "op": "DUP1"
    },
    "1114": {
      "op": "REVERT"
    },
    "1115": {
      "op": "JUMPDEST"
    },
    "1116": {
      "op": "DUP2"
    },
    "1117": {
      "op": "CALLDATALOAD"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1124": {
      "op": "SHL"
    },
    "1125": {
      "op": "SUB"
    },
    "1126": {
      "op": "DUP2"
    },
    "1127": {
      "op": "AND"
    },
    "1128": {
      "op": "DUP2"
    },
    "1129": {
      "op": "EQ"
    },
    "1130": {
      "op": "PUSH2",
      "value": "0x472"
    },
    "1133": {
      "op": "JUMPI"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1136": {
      "op": "DUP1"
    },
    "1137": {
      "op": "REVERT"
    },
    "1138": {
      "op": "JUMPDEST"
    },
    "1139": {
      "op": "SWAP4"
    },
    "1140": {
      "op": "SWAP3"
    },
    "1141": {
      "op": "POP"
    },
    "1142": {
      "op": "POP"
    },
    "1143": {
      "op": "POP"
    },
    "1144": {
      "jump": "o",
      "op": "JUMP"
    },
    "1145": {
      "op": "JUMPDEST"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1148": {
      "op": "DUP1"
    },
    "1149": {
      "op": "DUP3"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "DUP2"
    },
    "1152": {
      "op": "DUP2"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1190": {
      "op": "DUP3"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1195": {
      "op": "ADD"
    },
    "1196": {
      "op": "SWAP1"
    },
    "1197": {
      "jump": "o",
      "op": "JUMP"
    },
    "1198": {
      "op": "JUMPDEST"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1201": {
      "op": "DUP3"
    },
    "1202": {
      "op": "MLOAD"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1205": {
      "op": "JUMPDEST"
    },
    "1206": {
      "op": "DUP2"
    },
    "1207": {
      "op": "DUP2"
    },
    "1208": {
      "op": "LT"
    },
    "1209": {
      "op": "ISZERO"
    },
    "1210": {
      "op": "PUSH2",
      "value": "0x4CF"
    },
    "1213": {
      "op": "JUMPI"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1216": {
      "op": "DUP2"
    },
    "1217": {
      "op": "DUP7"
    },
    "1218": {
      "op": "ADD"
    },
    "1219": {
      "op": "DUP2"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "op": "MLOAD"
    },
    "1222": {
      "op": "DUP6"
    },
    "1223": {
      "op": "DUP4"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x4B5"
    },
    "1230": {
      "op": "JUMP"
    },
    "1231": {
      "op": "JUMPDEST"
    },
    "1232": {
      "op": "DUP2"
    },
    "1233": {
      "op": "DUP2"
    },
    "1234": {
      "op": "GT"
    },
    "1235": {
      "op": "ISZERO"
    },
    "1236": {
      "op": "PUSH2",
      "value": "0x4DE"
    },
    "1239": {
      "op": "JUMPI"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1242": {
      "op": "DUP3"
    },
    "1243": {
      "op": "DUP6"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "MSTORE"
    },
    "1246": {
      "op": "JUMPDEST"
    },
    "1247": {
      "op": "POP"
    },
    "1248": {
      "op": "SWAP2"
    },
    "1249": {
      "op": "SWAP1"
    },
    "1250": {
      "op": "SWAP2"
    },
    "1251": {
      "op": "ADD"
    },
    "1252": {
      "op": "SWAP3"
    },
    "1253": {
      "op": "SWAP2"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "jump": "o",
      "op": "JUMP"
    },
    "1257": {
      "op": "JUMPDEST"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "NOT"
    },
    "1262": {
      "op": "DUP3"
    },
    "1263": {
      "op": "GT"
    },
    "1264": {
      "op": "ISZERO"
    },
    "1265": {
      "op": "PUSH2",
      "value": "0x50A"
    },
    "1268": {
      "op": "JUMPI"
    },
    "1269": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1284": {
      "op": "MSTORE"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1289": {
      "op": "REVERT"
    },
    "1290": {
      "op": "JUMPDEST"
    },
    "1291": {
      "op": "POP"
    },
    "1292": {
      "op": "ADD"
    },
    "1293": {
      "op": "SWAP1"
    },
    "1294": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cb9d78c36cef54fbfdff16269fd1008bf890a5ac",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract VotingMachine is Ownable {\n    mapping(string => uint256) public candidateToVotes;\n    mapping(string => bool) private candidates;\n    mapping(address => bool) private hasVoted;\n\n    function addCandidate(string memory _candidate) public onlyOwner {\n        candidates[_candidate] = true;\n    }\n\n    modifier canVote(address _voter) {\n        require(hasVoted[_voter] == false, \"You can't vote more than once!!\");\n        _;\n    }\n\n    function voteCandidate(string memory _candidate)\n        public\n        canVote(msg.sender)\n    {\n        if (candidates[_candidate]) {\n            candidateToVotes[_candidate] = candidateToVotes[_candidate] + 1;\n            hasVoted[msg.sender] = true;\n        }\n    }\n}\n",
  "sourceMap": "110:716:2:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:1;921:18:0;:32::i;:::-;110:716:2;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;110:716:2:-;;;;;;;",
  "sourcePath": "contracts/voting.sol",
  "type": "contract"
}